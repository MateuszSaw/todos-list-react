{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","trimTask","trim","className","onSubmit","event","preventDefault","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","getInitialTasks","taskFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79b7da10.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const trimTask = newTaskContent.trim();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (trimTask === \"\"){\r\n      return\r\n    }\r\n    addNewTask(trimTask);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__input\"\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone}) => (\r\n  <ul className=\"tasks\">\r\n    {tasks.map(task => (\r\n      <li\r\n      key={task.id}\r\n        className = {`tasksItem${task.done && hideDone ? \" tasksItem--hidden\" : \"\"}`}\r\n      >\r\n        <button\r\n          className=\"taskList__button taskList__button--done\"\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ”\" :\"\"}\r\n        </button>\r\n        <p className ={`tasksItem__paragraph${task.done ? \" tasks__content--done\" :\"\"}`}>\r\n          {task.content}\r\n        </p>\r\n        <button\r\n          className=\"taskList__button taskList__button--delete\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nexport default Tasks","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({tasks, hideDone, toggleHideDone, setAllDone}) => (\r\n  <div className = \"buttons\">\r\n    {tasks.length > 0 && (\r\n     <>\r\n      <button onClick={toggleHideDone} className = \"buttons__button\">\r\n       {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n      </button>\r\n       <button\r\n        className = \"buttons__button\"\r\n        onClick = {setAllDone}\r\n        disabled = {tasks.every(({ done}) => done)}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </button>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <header className=\"section__header\">\r\n      <h2 className=\"section__title\">\r\n        {title}\r\n      </h2>\r\n      {extraHeaderContent}\r\n    </header>\r\n    <div className=\"section__body\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n)\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title })=> (\r\n<header>\r\n    <h1>{title}</h1>\r\n </header>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n)\r\n\r\nexport default Container;","import React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst getInitialTasks = () => {\n  const taskFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return taskFromLocalStorage\n  ? JSON.parse(taskFromLocalStorage)\n  : [];\n};\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n useEffect(()=> {\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone (hideDone => !hideDone)\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id){\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true\n    })));\n  }\n  const addNewTask = (newTaskContent) => {\n     setTasks(tasks => [\n        ...tasks,\n        {\n          content: newTaskContent,\n          done: false,\n          id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n        },\n     ]);\n  };\n\n  return (\n    <Container>\n      <Header\n        title=\"Lista zadaÅ„\"\n      />\n\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent ={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}